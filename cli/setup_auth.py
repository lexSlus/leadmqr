#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Thumbtack.
–ü–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–π—Ç–∏ –∫–∞–ø—á—É –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
"""

import os
import sys
import asyncio
import logging
from playwright.async_api import async_playwright

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from playwright_bot.thumbtack_bot import ThumbTackBot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class AuthSetup:
    def __init__(self, headless=False):
        self.headless = headless
        self.pw = None
        self.browser = None
        self.context = None
        self.page = None
        self.bot = None
        
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        
        self.pw = await async_playwright().start()
        
        # –°–æ–∑–¥–∞–µ–º persistent context –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
        user_data_dir = "pw_profiles/auth_setup"
        os.makedirs(user_data_dir, exist_ok=True)
        
        self.browser = await self.pw.chromium.launch_persistent_context(
            user_data_dir=user_data_dir,
            headless=self.headless,
            args=[
                '--no-sandbox',
                '--disable-dev-shm-usage',
                '--disable-blink-features=AutomationControlled',
                '--disable-web-security',
                '--disable-features=VizDisplayCompositor'
            ]
        )
        
        self.page = self.browser.pages[0] if self.browser.pages else await self.browser.new_page()
        self.bot = ThumbTackBot(self.page)
        
        logger.info("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        
    async def setup_auth(self):
        """–ü—Ä–æ—Ü–µ—Å—Å —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        logger.info("üîê –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        
        try:
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
            logger.info("üì± –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Thumbtack...")
            await self.page.goto("https://www.thumbtack.com/pro-leads")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ª–æ–≥–∏–Ω–∏—Ç—å—Å—è
            current_url = self.page.url
            logger.info(f"üìç –¢–µ–∫—É—â–∏–π URL: {current_url}")
            
            if "/login" in current_url or "login" in current_url.lower():
                logger.info("üîë –ù—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞...")
                await self.page.goto("https://www.thumbtack.com/login")
            else:
                logger.info("‚úÖ –£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∏–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                
            # –ñ–¥–µ–º, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Ä–µ—à–∏—Ç –∫–∞–ø—á—É
            logger.info("‚è≥ –û–∂–∏–¥–∞–µ–º –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...")
            logger.info("üìù –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ä–µ—à–∏—Ç–µ –∫–∞–ø—á—É –µ—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è")
            logger.info("üéØ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Enter –≤ –∫–æ–Ω—Å–æ–ª–∏...")
            
            # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                input("–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±—É–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∞...")
            except EOFError:
                # –ï—Å–ª–∏ input() –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ Docker), –∂–¥–µ–º 30 —Å–µ–∫—É–Ω–¥
                logger.info("‚è∞ –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
                await asyncio.sleep(30)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
            current_url = self.page.url
            logger.info(f"üìç URL –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {current_url}")
            
            if "/pro-leads" in current_url or "/dashboard" in current_url:
                logger.info("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                await self.save_auth_state()
                
                logger.info("üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ pw_profiles/auth_setup/")
                logger.info("üîÑ –¢–µ–ø–µ—Ä—å LeadProducer —Å–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Å–µ—Å—Å–∏—é")
                
            else:
                logger.warning("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL.")
                
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
            raise
            
    async def save_auth_state(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
        try:
            # –ö–æ–ø–∏—Ä—É–µ–º cookies –∏ localStorage –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ñ–∏–ª—å
            auth_profile_dir = "pw_profiles/auth_setup"
            main_profile_dir = "pw_profiles"
            
            logger.info("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            
            # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ñ–∏–ª—å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            os.makedirs(main_profile_dir, exist_ok=True)
            
            # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ—Ñ–∏–ª—è
            import shutil
            if os.path.exists(auth_profile_dir):
                # –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ—Ñ–∏–ª—è
                for item in os.listdir(auth_profile_dir):
                    src = os.path.join(auth_profile_dir, item)
                    dst = os.path.join(main_profile_dir, item)
                    if os.path.isdir(src):
                        if os.path.exists(dst):
                            shutil.rmtree(dst)
                        shutil.copytree(src, dst)
                    else:
                        shutil.copy2(src, dst)
                        
            logger.info("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
            
    async def close(self):
        """–ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞"""
        try:
            if self.browser:
                await self.browser.close()
            if self.pw:
                await self.pw.stop()
            logger.info("üîí –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import argparse
    
    parser = argparse.ArgumentParser(description='–†—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Thumbtack')
    parser.add_argument('--headless', action='store_true', help='–ó–∞–ø—É—Å–∫ –≤ headless —Ä–µ–∂–∏–º–µ')
    args = parser.parse_args()
    
    auth_setup = AuthSetup(headless=args.headless)
    
    try:
        await auth_setup.start()
        await auth_setup.setup_auth()
        
        logger.info("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        logger.info("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å LeadProducer:")
        logger.info("   python cli/run_lead_producer.py")
        
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await auth_setup.close()

if __name__ == "__main__":
    asyncio.run(main())
