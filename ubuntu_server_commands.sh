#!/bin/bash
# üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è Ubuntu —Å–µ—Ä–≤–µ—Ä–∞ - LeadMQR —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

echo "=== 1. –ó–ê–ü–£–°–ö –°–ò–°–¢–ï–ú–´ ==="
export DOCKER_BUILDKIT=1
export COMPOSE_DOCKER_CLI_BUILD=1
docker compose -f docker-compose-dev.yaml up --build -d
docker compose -f docker-compose-dev.yaml ps

echo ""
echo "=== 2. –û–¢–ü–†–ê–í–ö–ê –¢–ï–°–¢–û–í–û–ì–û –õ–ò–î–ê ==="
docker compose -f docker-compose-dev.yaml exec web python manage.py shell -c "
from leads.tasks import process_single_lead_task

# –†–µ–∞–ª—å–Ω—ã–π –ª–∏–¥ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º
test_lead = {
    'index': 0,
    'href': '/pro-inbox/messages/552361562202349575',
    'lead_key': '040fce53dd765b65513b5e5c118a02e5',
    'name': 'Real Lead with Phone',
    'category': 'Real Category',
    'location': 'Real Location',
    'has_view': True
}

print('=== –û–¢–ü–†–ê–í–õ–Ø–ï–ú –õ–ò–î –° –¢–ï–õ–ï–§–û–ù–û–ú ===')
result = process_single_lead_task.apply_async(args=[test_lead], queue='lead_proc')
print(f'Task ID: {result.id}')
print('‚úÖ –õ–∏–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')
"

echo ""
echo "=== 3. –ú–û–ù–ò–¢–û–†–ò–ù–ì –õ–û–ì–û–í ==="
echo "–°–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏ –≤–æ—Ä–∫–µ—Ä–∞:"
docker compose -f docker-compose-dev.yaml logs -f celery_worker

echo ""
echo "=== 4. –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ==="
docker compose -f docker-compose-dev.yaml exec web python manage.py shell -c "
from leads.models import FoundPhone, ProcessedLead
from ai_calls.models import AICall

print('=== FoundPhone ===')
for phone in FoundPhone.objects.all().order_by('-created_at')[:3]:
    print(f'Lead: {phone.lead_key}, Phone: {phone.phone}, Created: {phone.created_at}')

print('\n=== ProcessedLead ===')
for lead in ProcessedLead.objects.all().order_by('-created_at')[:3]:
    print(f'Lead: {lead.key}, Created: {lead.created_at}')

print('\n=== AICall ===')
for call in AICall.objects.all().order_by('-created_at')[:3]:
    print(f'Lead: {call.lead_key}, Phone: {call.to_phone}, Status: {call.status}, Created: {call.created_at}')
"
