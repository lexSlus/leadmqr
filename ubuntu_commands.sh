#!/bin/bash

echo "üöÄ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ Ubuntu —Å–µ—Ä–≤–µ—Ä–µ"
echo "========================================"

echo ""
echo "1. –ó–∞–ø—É—Å–∫ Docker Compose (dev2):"
echo "docker-compose -f docker-compose-dev2.yaml up -d"

echo ""
echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
echo "docker-compose -f docker-compose-dev2.yaml ps"

echo ""
echo "3. –õ–æ–≥–∏ AI worker:"
echo "docker-compose -f docker-compose-dev2.yaml logs -f celery_worker_ai"

echo ""
echo "4. –õ–æ–≥–∏ Lead worker:"
echo "docker-compose -f docker-compose-dev2.yaml logs -f celery_worker"

echo ""
echo "5. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–∏–¥–∞:"
echo "docker-compose -f docker-compose-dev2.yaml exec web python manage.py shell -c \"
from leads.models import FoundPhone
phone_obj = FoundPhone.objects.create(
    lead_key='ubuntu_test_123',
    phone='+1234567890',
    variables={'customer_name': 'Ubuntu Test', 'service': 'Cleaning'}
)
print(f'‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ª–∏–¥: ID={phone_obj.id}')
\""

echo ""
echo "6. –û—Ç–ø—Ä–∞–≤–∫–∞ AI call task:"
echo "docker-compose -f docker-compose-dev2.yaml exec web python manage.py shell -c \"
from ai_calls.tasks import enqueue_ai_call
result = enqueue_ai_call.delay('5')
print(f'‚úÖ AI call task –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {result.id}')
\""

echo ""
echo "7. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã:"
echo "docker-compose -f docker-compose-dev2.yaml down"

echo ""
echo "8. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–≤–∫–ª—é—á–∞—è volumes):"
echo "docker-compose -f docker-compose-dev2.yaml down -v"
