import asyncio
import logging
from playwright.async_api import async_playwright

# Настраиваем логирование, чтобы видеть сообщения
logging.basicConfig(level=logging.INFO, format='%(asctime)s [%(levelname)s] playwright_bot: %(message)s')
log = logging.getLogger("playwright_bot")

async def main():
    """
    Максимально простой и стабильный скрипт для теста debug-порта.
    Просто запускает браузер, открывает Google и ждет.
    """
    log.warning("!!! ЗАПУЩЕН УПРОЩЕННЫЙ ТЕСТОВЫЙ СКРИПТ (v2) !!!")
    
    try:
        playwright = await async_playwright().start()
        
        context = await playwright.chromium.launch(
            headless=False, # Обязательно False для xvfb
            args=[
                "--remote-debugging-port=9222",
                "--remote-debugging-address=0.0.0.0",
                "--no-sandbox",
                "--disable-setuid-sandbox",
                "--disable-dev-shm-usage",
                "--disable-gpu",
            ]
        )
        
        page = await context.new_page()
        await page.goto("https://google.com")
        
        log.warning("!!! БРАУЗЕР ЗАПУЩЕН И ЖДЕТ. ПРОВЕРЯЙТЕ localhost:9222 или chrome://inspect !!!")
        
        # Бесконечный цикл, чтобы контейнер не завершался
        while True:
            await asyncio.sleep(60)
            log.info("... a simple browser is still running ...")
            
    except Exception as e:
        log.error(f"Критическая ошибка в тестовом скрипте: {e}", exc_info=True)
        # Ждем, чтобы успеть прочитать лог
        await asyncio.sleep(300)

if __name__ == "__main__":
    asyncio.run(main())

